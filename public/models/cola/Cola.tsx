/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 cola.glb -t -s -T -k -r 
Files: cola.glb [29.18KB] > /Users/thib-cs/Work/Perso/project3D/threeJs-challenge-vending-machine/public/models/cola/cola-transformed.glb [4.73KB] (84%)
*/

import * as THREE from 'three'
import {useCubeTexture, useGLTF} from '@react-three/drei'
import { GLTF } from 'three-stdlib'
type GLTFResult = GLTF & {
  nodes: {
    Circle004: THREE.Mesh
    Circle004_1: THREE.Mesh
    Circle004_2: THREE.Mesh
  }
  materials: {
    glassRed: THREE.MeshStandardMaterial
    red: THREE.MeshStandardMaterial
    cola: THREE.MeshStandardMaterial
  }
}


export function Cola(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('models/cola/cola-transformed.glb') as GLTFResult
  const envMap = useCubeTexture(
    ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'],
    {path: '/envmap/cityNight/'}
  );

  const glassRedMaterial = materials.glassRed.clone();
  glassRedMaterial.envMap = envMap;
  glassRedMaterial.envMapIntensity = 2;
  glassRedMaterial.needsUpdate = true;

  const redMaterial = materials.red.clone();
  redMaterial.envMap = envMap;
  redMaterial.envMapIntensity = 2;
  redMaterial.needsUpdate = true;

  const colaMaterial = materials.cola.clone();
  colaMaterial.envMap = envMap;
  colaMaterial.envMapIntensity = 2;
  colaMaterial.needsUpdate = true;
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Circle004.geometry} material={glassRedMaterial} />
      <mesh castShadow receiveShadow geometry={nodes.Circle004_1.geometry} material={redMaterial} />
      <mesh castShadow receiveShadow geometry={nodes.Circle004_2.geometry} material={colaMaterial} />
    </group>
  )
}

useGLTF.preload('models/cola/cola-transformed.glb')
